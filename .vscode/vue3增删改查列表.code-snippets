{
  "vue3增删改查列表": {
    "prefix": "vue3PageListEdit",
    "body": [
      "<script setup lang=\"ts\">",
      "import { reactive, ref, onMounted, nextTick } from 'vue';",
      "import { useQueryParam } from '@/hooks/useQueryParam';",
      "import { usePagination } from '@/hooks/usePagination';",
      "import { useBaseTableBar } from '@/components/BaseTableBar/hook';",
      "import { Refresh, Search, Plus, Edit, Delete } from '@element-plus/icons-vue';",
      "//todo 修改引入api",
      "import * as api from '@/api/product/brandManagement';",
      "import { ElMessage, FormInstance } from 'element-plus';",
      "import { useDynamicTableHeight } from '@/hooks/useDynamicTableHeight';",
      "",
      "//todo 设置name",
      "defineOptions({",
      "  name: 'BrandManagement'",
      "});",
      "",
      "//#region hooks",
      "useDynamicTableHeight();",
      "const { tableAlign, tableSize, tableStripe } = useBaseTableBar();",
      "//#endregion",
      "//#region 查询参数",
      "//todo 设置查询参数",
      "const initialQueryParam = {",
      "  brandName: '',",
      "  startTime: getLastDays(6, 'YYYY-MM-DD'),",
      "  endTime: getLastDays(0, 'YYYY-MM-DD')",
      "};",
      "const { queryParam, handleResetQueryParam } = useQueryParam(initialQueryParam);",
      "const state = reactive({",
      "  tableData: []",
      "});",
      "const queryLoading = ref(false);",
      "const getList = async () => {",
      "  queryLoading.value = true;",
      "  //todo 修改列表请求路径",
      "  const res = await api.queryBrandPage(queryParam);",
      "  queryLoading.value = false;",
      "  if (res.code === 200) {",
      "    state.tableData = res.data.list;",
      "    dataTotal.value = res.data.totalCount;",
      "  } else {",
      "    ElMessage.error(res.message);",
      "  }",
      "};",
      "",
      "const { pageSizes, paginationLayout, dataTotal, handleCurrentChange, handleSizeChange } = usePagination(",
      "  queryParam,",
      "  getList",
      ");",
      "const handleSearch = () => {",
      "  queryParam.pageNo = 1;",
      "  getList();",
      "};",
      "//#endregion",
      "",
      "//#region 新增&修改",
      "//todo 设置参数验证",
      "const rules = {",
      "  brandName: [{ required: true, message: '请输入品牌名', trigger: 'blur' }]",
      "};",
      "const formLabelWidth = '120px';",
      "const editDialogVisible = ref(false);",
      "//todo 设置编辑参数",
      "const form = reactive({",
      "  brandName: ''",
      "});",
      "const ruleFormRef = ref<FormInstance>();",
      "const editTitle = ref('');",
      "const handleEdit = row => {",
      "  //todo 根据参数判断是新增还是修改",
      "  if (row?.companyCode) {",
      "    editTitle.value = '编辑品牌';",
      "    nextTick(() => {",
      "      ruleFormRef.value && ruleFormRef.value.resetFields();",
      "      Object.assign(form, row);",
      "    });",
      "  } else {",
      "    nextTick(() => {",
      "      ruleFormRef.value && ruleFormRef.value.resetFields();",
      "    });",
      "    editTitle.value = '新增品牌';",
      "  }",
      "  editDialogVisible.value = true;",
      "};",
      "const editSure = async () => {",
      "  await ruleFormRef.value.validate(async valid => {",
      "    if (valid) {",
      "      let res;",
      "      if (editTitle.value === '编辑品牌') {",
      "        res = await api.updateBrandById(form);",
      "      } else {",
      "        res = await api.insertBrand(form);",
      "      }",
      "      if (res.code === 200) {",
      "        ElMessage.success(editTitle.value + '成功');",
      "        editDialogVisible.value = false;",
      "        getList();",
      "      } else {",
      "        ElMessage.error(res.message);",
      "      }",
      "    }",
      "  });",
      "};",
      "//#endregion",
      "",
      "//#region 删除",
      "const handleDelete = async id => {",
      "  const res = await api.deleteBrandById({ id });",
      "  if (res.code === 200) {",
      "    ElMessage.success('删除成功');",
      "    getList();",
      "  } else {",
      "    ElMessage.error(res.message);",
      "  }",
      "};",
      "//#endregion",
      "",
      "onMounted(() => {",
      "  getList();",
      "});",
      "</script>",
      "",
      "<template>",
      "  <main>",
      "    <el-form @submit.prevent @keydown.enter=\"handleSearch\">",
      "      <el-row :gutter=\"20\">",
      "        <!-- todo根据参数修改查询条件 -->",
      "        <el-col :xl=\"55\" :lg=\"8\">",
      "          <el-form-item label=\"品牌名称\">",
      "            <el-input placeholder=\"请输入品牌名称\" clearable v-model=\"queryParam.brandName\" maxlength=\"20\" />",
      "          </el-form-item>",
      "        </el-col>",
      "        <el-col :xl=\"55\" :lg=\"8\">",
      "          <el-button-group>",
      "            <el-button :icon=\"Search\" type=\"primary\" @click=\"handleSearch\">查询</el-button>",
      "            <base-download-button url=\"/productInfo/exportProductInfo\" :param=\"queryParam\">导出</base-download-button>",
      "            <el-button :icon=\"Refresh\" @click=\"handleResetQueryParam\">重置</el-button>",
      "          </el-button-group>",
      "        </el-col>",
      "      </el-row>",
      "      <base-table-bar-box>",
      "        <template #button>",
      "          <el-button link type=\"primary\" :icon=\"Plus\" @click=\"handleEdit\">新增</el-button>",
      "        </template>",
      "      </base-table-bar-box>",
      "    </el-form>",
      "    <el-row>",
      "      <el-table",
      "        :data=\"state.tableData\"",
      "        border",
      "        :size=\"tableSize\"",
      "        :stripe=\"tableStripe\"",
      "        v-loading=\"queryLoading\"",
      "        :cell-style=\"{ textAlign: tableAlign }\"",
      "        :header-cell-style=\"{ textAlign: tableAlign }\"",
      "      >",
      "        <el-table-column label=\"操作\" fixed width=\"140\">",
      "          <template #default=\"{ row }\">",
      "            <el-button type=\"text\" :icon=\"Edit\" @click=\"handleEdit(row)\">编辑</el-button>",
      "            <el-popconfirm title=\"确定删除吗\" @confirm=\"handleDelete(row.id)\">",
      "              <template #reference>",
      "                <el-button type=\"text\" :icon=\"Delete\">删除</el-button>",
      "              </template>",
      "            </el-popconfirm>",
      "          </template>",
      "        </el-table-column>",
      "        <el-table-column label=\"名称\" prop=\"userName\" />",
      "        <el-table-column label=\"创建人\" prop=\"createNo\" min-width=\"70\" />",
      "        <el-table-column label=\"创建时间\" prop=\"createTime\" min-width=\"100\" />",
      "        <el-table-column label=\"修改人\" prop=\"updateNo\" min-width=\"70\" />",
      "        <el-table-column label=\"修改时间\" prop=\"updateTime\" min-width=\"100\" />",
      "      </el-table>",
      "    </el-row>",
      "    <el-row justify=\"end\">",
      "      <base-table-bar v-model:tableSize=\"tableSize\" v-model:tableAlign=\"tableAlign\" v-model:tableStripe=\"tableStripe\" />",
      "      <el-pagination",
      "        v-model:current-page=\"queryParam.pageNo\"",
      "        v-model:page-size=\"queryParam.pageSize\"",
      "        :page-sizes=\"pageSizes\"",
      "        :layout=\"paginationLayout\"",
      "        :total=\"dataTotal\"",
      "        @size-change=\"handleSizeChange\"",
      "        @current-change=\"handleCurrentChange\"",
      "      />",
      "    </el-row>",
      "",
      "    <el-dialog v-model=\"editDialogVisible\" :title=\"editTitle\" width=\"500\">",
      "      <!-- todo根据参数修改表单 -->",
      "      <el-form :model=\"form\" ref=\"ruleFormRef\" :rules=\"rules\" @submit.prevent @keydown.enter=\"editSure\">",
      "        <el-form-item label=\"仓库名称\" :label-width=\"formLabelWidth\" prop=\"stockName\">",
      "          <el-input v-model=\"form.brandName\" autocomplete=\"off\" placeholder=\"请输入仓库名称\" clearable maxLength=\"20\" />",
      "        </el-form-item>",
      "      </el-form>",
      "      <template #footer>",
      "        <span class=\"dialog-footer\">",
      "          <el-button @click=\"editDialogVisible = false\">取消</el-button>",
      "          <el-button type=\"primary\" @click=\"editSure\">确认</el-button>",
      "        </span>",
      "      </template>",
      "    </el-dialog>",
      "  </main>",
      "</template>",
      "",
      "<style scoped></style>",
      ""
    ],
    "description": "vue3增删改查列表"
  }
}
